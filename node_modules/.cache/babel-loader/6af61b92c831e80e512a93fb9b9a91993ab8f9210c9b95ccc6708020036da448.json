{"ast":null,"code":"/**\n * --------------------------------------------------------------------------\n * Bootstrap scrollspy.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport BaseComponent from './base-component.js';\nimport EventHandler from './dom/event-handler.js';\nimport SelectorEngine from './dom/selector-engine.js';\nimport { defineJQueryPlugin, getElement, isDisabled, isVisible } from './util/index.js';\n\n/**\n * Constants\n */\n\nconst NAME = 'scrollspy';\nconst DATA_KEY = 'bs.scrollspy';\nconst EVENT_KEY = `.${DATA_KEY}`;\nconst DATA_API_KEY = '.data-api';\nconst EVENT_ACTIVATE = `activate${EVENT_KEY}`;\nconst EVENT_CLICK = `click${EVENT_KEY}`;\nconst EVENT_LOAD_DATA_API = `load${EVENT_KEY}${DATA_API_KEY}`;\nconst CLASS_NAME_DROPDOWN_ITEM = 'dropdown-item';\nconst CLASS_NAME_ACTIVE = 'active';\nconst SELECTOR_DATA_SPY = '[data-bs-spy=\"scroll\"]';\nconst SELECTOR_TARGET_LINKS = '[href]';\nconst SELECTOR_NAV_LIST_GROUP = '.nav, .list-group';\nconst SELECTOR_NAV_LINKS = '.nav-link';\nconst SELECTOR_NAV_ITEMS = '.nav-item';\nconst SELECTOR_LIST_ITEMS = '.list-group-item';\nconst SELECTOR_LINK_ITEMS = `${SELECTOR_NAV_LINKS}, ${SELECTOR_NAV_ITEMS} > ${SELECTOR_NAV_LINKS}, ${SELECTOR_LIST_ITEMS}`;\nconst SELECTOR_DROPDOWN = '.dropdown';\nconst SELECTOR_DROPDOWN_TOGGLE = '.dropdown-toggle';\nconst Default = {\n  offset: null,\n  // TODO: v6 @deprecated, keep it for backwards compatibility reasons\n  rootMargin: '0px 0px -25%',\n  smoothScroll: false,\n  target: null,\n  threshold: [0.1, 0.5, 1]\n};\nconst DefaultType = {\n  offset: '(number|null)',\n  // TODO v6 @deprecated, keep it for backwards compatibility reasons\n  rootMargin: 'string',\n  smoothScroll: 'boolean',\n  target: 'element',\n  threshold: 'array'\n};\n\n/**\n * Class definition\n */\n\nclass ScrollSpy extends BaseComponent {\n  constructor(element, config) {\n    super(element, config);\n\n    // this._element is the observablesContainer and config.target the menu links wrapper\n    this._targetLinks = new Map();\n    this._observableSections = new Map();\n    this._rootElement = getComputedStyle(this._element).overflowY === 'visible' ? null : this._element;\n    this._activeTarget = null;\n    this._observer = null;\n    this._previousScrollData = {\n      visibleEntryTop: 0,\n      parentScrollTop: 0\n    };\n    this.refresh(); // initialize\n  }\n\n  // Getters\n  static get Default() {\n    return Default;\n  }\n  static get DefaultType() {\n    return DefaultType;\n  }\n  static get NAME() {\n    return NAME;\n  }\n\n  // Public\n  refresh() {\n    this._initializeTargetsAndObservables();\n    this._maybeEnableSmoothScroll();\n    if (this._observer) {\n      this._observer.disconnect();\n    } else {\n      this._observer = this._getNewObserver();\n    }\n    for (const section of this._observableSections.values()) {\n      this._observer.observe(section);\n    }\n  }\n  dispose() {\n    this._observer.disconnect();\n    super.dispose();\n  }\n\n  // Private\n  _configAfterMerge(config) {\n    // TODO: on v6 target should be given explicitly & remove the {target: 'ss-target'} case\n    config.target = getElement(config.target) || document.body;\n\n    // TODO: v6 Only for backwards compatibility reasons. Use rootMargin only\n    config.rootMargin = config.offset ? `${config.offset}px 0px -30%` : config.rootMargin;\n    if (typeof config.threshold === 'string') {\n      config.threshold = config.threshold.split(',').map(value => Number.parseFloat(value));\n    }\n    return config;\n  }\n  _maybeEnableSmoothScroll() {\n    if (!this._config.smoothScroll) {\n      return;\n    }\n\n    // unregister any previous listeners\n    EventHandler.off(this._config.target, EVENT_CLICK);\n    EventHandler.on(this._config.target, EVENT_CLICK, SELECTOR_TARGET_LINKS, event => {\n      const observableSection = this._observableSections.get(event.target.hash);\n      if (observableSection) {\n        event.preventDefault();\n        const root = this._rootElement || window;\n        const height = observableSection.offsetTop - this._element.offsetTop;\n        if (root.scrollTo) {\n          root.scrollTo({\n            top: height,\n            behavior: 'smooth'\n          });\n          return;\n        }\n\n        // Chrome 60 doesn't support `scrollTo`\n        root.scrollTop = height;\n      }\n    });\n  }\n  _getNewObserver() {\n    const options = {\n      root: this._rootElement,\n      threshold: this._config.threshold,\n      rootMargin: this._config.rootMargin\n    };\n    return new IntersectionObserver(entries => this._observerCallback(entries), options);\n  }\n\n  // The logic of selection\n  _observerCallback(entries) {\n    const targetElement = entry => this._targetLinks.get(`#${entry.target.id}`);\n    const activate = entry => {\n      this._previousScrollData.visibleEntryTop = entry.target.offsetTop;\n      this._process(targetElement(entry));\n    };\n    const parentScrollTop = (this._rootElement || document.documentElement).scrollTop;\n    const userScrollsDown = parentScrollTop >= this._previousScrollData.parentScrollTop;\n    this._previousScrollData.parentScrollTop = parentScrollTop;\n    for (const entry of entries) {\n      if (!entry.isIntersecting) {\n        this._activeTarget = null;\n        this._clearActiveClass(targetElement(entry));\n        continue;\n      }\n      const entryIsLowerThanPrevious = entry.target.offsetTop >= this._previousScrollData.visibleEntryTop;\n      // if we are scrolling down, pick the bigger offsetTop\n      if (userScrollsDown && entryIsLowerThanPrevious) {\n        activate(entry);\n        // if parent isn't scrolled, let's keep the first visible item, breaking the iteration\n        if (!parentScrollTop) {\n          return;\n        }\n        continue;\n      }\n\n      // if we are scrolling up, pick the smallest offsetTop\n      if (!userScrollsDown && !entryIsLowerThanPrevious) {\n        activate(entry);\n      }\n    }\n  }\n  _initializeTargetsAndObservables() {\n    this._targetLinks = new Map();\n    this._observableSections = new Map();\n    const targetLinks = SelectorEngine.find(SELECTOR_TARGET_LINKS, this._config.target);\n    for (const anchor of targetLinks) {\n      // ensure that the anchor has an id and is not disabled\n      if (!anchor.hash || isDisabled(anchor)) {\n        continue;\n      }\n      const observableSection = SelectorEngine.findOne(anchor.hash, this._element);\n\n      // ensure that the observableSection exists & is visible\n      if (isVisible(observableSection)) {\n        this._targetLinks.set(anchor.hash, anchor);\n        this._observableSections.set(anchor.hash, observableSection);\n      }\n    }\n  }\n  _process(target) {\n    if (this._activeTarget === target) {\n      return;\n    }\n    this._clearActiveClass(this._config.target);\n    this._activeTarget = target;\n    target.classList.add(CLASS_NAME_ACTIVE);\n    this._activateParents(target);\n    EventHandler.trigger(this._element, EVENT_ACTIVATE, {\n      relatedTarget: target\n    });\n  }\n  _activateParents(target) {\n    // Activate dropdown parents\n    if (target.classList.contains(CLASS_NAME_DROPDOWN_ITEM)) {\n      SelectorEngine.findOne(SELECTOR_DROPDOWN_TOGGLE, target.closest(SELECTOR_DROPDOWN)).classList.add(CLASS_NAME_ACTIVE);\n      return;\n    }\n    for (const listGroup of SelectorEngine.parents(target, SELECTOR_NAV_LIST_GROUP)) {\n      // Set triggered links parents as active\n      // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor\n      for (const item of SelectorEngine.prev(listGroup, SELECTOR_LINK_ITEMS)) {\n        item.classList.add(CLASS_NAME_ACTIVE);\n      }\n    }\n  }\n  _clearActiveClass(parent) {\n    parent.classList.remove(CLASS_NAME_ACTIVE);\n    const activeNodes = SelectorEngine.find(`${SELECTOR_TARGET_LINKS}.${CLASS_NAME_ACTIVE}`, parent);\n    for (const node of activeNodes) {\n      node.classList.remove(CLASS_NAME_ACTIVE);\n    }\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = ScrollSpy.getOrCreateInstance(this, config);\n      if (typeof config !== 'string') {\n        return;\n      }\n      if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {\n        throw new TypeError(`No method named \"${config}\"`);\n      }\n      data[config]();\n    });\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(window, EVENT_LOAD_DATA_API, () => {\n  for (const spy of SelectorEngine.find(SELECTOR_DATA_SPY)) {\n    ScrollSpy.getOrCreateInstance(spy);\n  }\n});\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(ScrollSpy);\nexport default ScrollSpy;","map":{"version":3,"names":["BaseComponent","EventHandler","SelectorEngine","defineJQueryPlugin","getElement","isDisabled","isVisible","NAME","DATA_KEY","EVENT_KEY","DATA_API_KEY","EVENT_ACTIVATE","EVENT_CLICK","EVENT_LOAD_DATA_API","CLASS_NAME_DROPDOWN_ITEM","CLASS_NAME_ACTIVE","SELECTOR_DATA_SPY","SELECTOR_TARGET_LINKS","SELECTOR_NAV_LIST_GROUP","SELECTOR_NAV_LINKS","SELECTOR_NAV_ITEMS","SELECTOR_LIST_ITEMS","SELECTOR_LINK_ITEMS","SELECTOR_DROPDOWN","SELECTOR_DROPDOWN_TOGGLE","Default","offset","rootMargin","smoothScroll","target","threshold","DefaultType","ScrollSpy","constructor","element","config","_targetLinks","Map","_observableSections","_rootElement","getComputedStyle","_element","overflowY","_activeTarget","_observer","_previousScrollData","visibleEntryTop","parentScrollTop","refresh","_initializeTargetsAndObservables","_maybeEnableSmoothScroll","disconnect","_getNewObserver","section","values","observe","dispose","_configAfterMerge","document","body","split","map","value","Number","parseFloat","_config","off","on","event","observableSection","get","hash","preventDefault","root","window","height","offsetTop","scrollTo","top","behavior","scrollTop","options","IntersectionObserver","entries","_observerCallback","targetElement","entry","id","activate","_process","documentElement","userScrollsDown","isIntersecting","_clearActiveClass","entryIsLowerThanPrevious","targetLinks","find","anchor","findOne","set","classList","add","_activateParents","trigger","relatedTarget","contains","closest","listGroup","parents","item","prev","parent","remove","activeNodes","node","jQueryInterface","each","data","getOrCreateInstance","undefined","startsWith","TypeError","spy"],"sources":["/Volumes/DatosINT/DEV/Git/PgMiaLucas/juanbproducciones/node_modules/bootstrap/js/src/scrollspy.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap scrollspy.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport BaseComponent from './base-component.js'\nimport EventHandler from './dom/event-handler.js'\nimport SelectorEngine from './dom/selector-engine.js'\nimport { defineJQueryPlugin, getElement, isDisabled, isVisible } from './util/index.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'scrollspy'\nconst DATA_KEY = 'bs.scrollspy'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\n\nconst EVENT_ACTIVATE = `activate${EVENT_KEY}`\nconst EVENT_CLICK = `click${EVENT_KEY}`\nconst EVENT_LOAD_DATA_API = `load${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_DROPDOWN_ITEM = 'dropdown-item'\nconst CLASS_NAME_ACTIVE = 'active'\n\nconst SELECTOR_DATA_SPY = '[data-bs-spy=\"scroll\"]'\nconst SELECTOR_TARGET_LINKS = '[href]'\nconst SELECTOR_NAV_LIST_GROUP = '.nav, .list-group'\nconst SELECTOR_NAV_LINKS = '.nav-link'\nconst SELECTOR_NAV_ITEMS = '.nav-item'\nconst SELECTOR_LIST_ITEMS = '.list-group-item'\nconst SELECTOR_LINK_ITEMS = `${SELECTOR_NAV_LINKS}, ${SELECTOR_NAV_ITEMS} > ${SELECTOR_NAV_LINKS}, ${SELECTOR_LIST_ITEMS}`\nconst SELECTOR_DROPDOWN = '.dropdown'\nconst SELECTOR_DROPDOWN_TOGGLE = '.dropdown-toggle'\n\nconst Default = {\n  offset: null, // TODO: v6 @deprecated, keep it for backwards compatibility reasons\n  rootMargin: '0px 0px -25%',\n  smoothScroll: false,\n  target: null,\n  threshold: [0.1, 0.5, 1]\n}\n\nconst DefaultType = {\n  offset: '(number|null)', // TODO v6 @deprecated, keep it for backwards compatibility reasons\n  rootMargin: 'string',\n  smoothScroll: 'boolean',\n  target: 'element',\n  threshold: 'array'\n}\n\n/**\n * Class definition\n */\n\nclass ScrollSpy extends BaseComponent {\n  constructor(element, config) {\n    super(element, config)\n\n    // this._element is the observablesContainer and config.target the menu links wrapper\n    this._targetLinks = new Map()\n    this._observableSections = new Map()\n    this._rootElement = getComputedStyle(this._element).overflowY === 'visible' ? null : this._element\n    this._activeTarget = null\n    this._observer = null\n    this._previousScrollData = {\n      visibleEntryTop: 0,\n      parentScrollTop: 0\n    }\n    this.refresh() // initialize\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  refresh() {\n    this._initializeTargetsAndObservables()\n    this._maybeEnableSmoothScroll()\n\n    if (this._observer) {\n      this._observer.disconnect()\n    } else {\n      this._observer = this._getNewObserver()\n    }\n\n    for (const section of this._observableSections.values()) {\n      this._observer.observe(section)\n    }\n  }\n\n  dispose() {\n    this._observer.disconnect()\n    super.dispose()\n  }\n\n  // Private\n  _configAfterMerge(config) {\n    // TODO: on v6 target should be given explicitly & remove the {target: 'ss-target'} case\n    config.target = getElement(config.target) || document.body\n\n    // TODO: v6 Only for backwards compatibility reasons. Use rootMargin only\n    config.rootMargin = config.offset ? `${config.offset}px 0px -30%` : config.rootMargin\n\n    if (typeof config.threshold === 'string') {\n      config.threshold = config.threshold.split(',').map(value => Number.parseFloat(value))\n    }\n\n    return config\n  }\n\n  _maybeEnableSmoothScroll() {\n    if (!this._config.smoothScroll) {\n      return\n    }\n\n    // unregister any previous listeners\n    EventHandler.off(this._config.target, EVENT_CLICK)\n\n    EventHandler.on(this._config.target, EVENT_CLICK, SELECTOR_TARGET_LINKS, event => {\n      const observableSection = this._observableSections.get(event.target.hash)\n      if (observableSection) {\n        event.preventDefault()\n        const root = this._rootElement || window\n        const height = observableSection.offsetTop - this._element.offsetTop\n        if (root.scrollTo) {\n          root.scrollTo({ top: height, behavior: 'smooth' })\n          return\n        }\n\n        // Chrome 60 doesn't support `scrollTo`\n        root.scrollTop = height\n      }\n    })\n  }\n\n  _getNewObserver() {\n    const options = {\n      root: this._rootElement,\n      threshold: this._config.threshold,\n      rootMargin: this._config.rootMargin\n    }\n\n    return new IntersectionObserver(entries => this._observerCallback(entries), options)\n  }\n\n  // The logic of selection\n  _observerCallback(entries) {\n    const targetElement = entry => this._targetLinks.get(`#${entry.target.id}`)\n    const activate = entry => {\n      this._previousScrollData.visibleEntryTop = entry.target.offsetTop\n      this._process(targetElement(entry))\n    }\n\n    const parentScrollTop = (this._rootElement || document.documentElement).scrollTop\n    const userScrollsDown = parentScrollTop >= this._previousScrollData.parentScrollTop\n    this._previousScrollData.parentScrollTop = parentScrollTop\n\n    for (const entry of entries) {\n      if (!entry.isIntersecting) {\n        this._activeTarget = null\n        this._clearActiveClass(targetElement(entry))\n\n        continue\n      }\n\n      const entryIsLowerThanPrevious = entry.target.offsetTop >= this._previousScrollData.visibleEntryTop\n      // if we are scrolling down, pick the bigger offsetTop\n      if (userScrollsDown && entryIsLowerThanPrevious) {\n        activate(entry)\n        // if parent isn't scrolled, let's keep the first visible item, breaking the iteration\n        if (!parentScrollTop) {\n          return\n        }\n\n        continue\n      }\n\n      // if we are scrolling up, pick the smallest offsetTop\n      if (!userScrollsDown && !entryIsLowerThanPrevious) {\n        activate(entry)\n      }\n    }\n  }\n\n  _initializeTargetsAndObservables() {\n    this._targetLinks = new Map()\n    this._observableSections = new Map()\n\n    const targetLinks = SelectorEngine.find(SELECTOR_TARGET_LINKS, this._config.target)\n\n    for (const anchor of targetLinks) {\n      // ensure that the anchor has an id and is not disabled\n      if (!anchor.hash || isDisabled(anchor)) {\n        continue\n      }\n\n      const observableSection = SelectorEngine.findOne(anchor.hash, this._element)\n\n      // ensure that the observableSection exists & is visible\n      if (isVisible(observableSection)) {\n        this._targetLinks.set(anchor.hash, anchor)\n        this._observableSections.set(anchor.hash, observableSection)\n      }\n    }\n  }\n\n  _process(target) {\n    if (this._activeTarget === target) {\n      return\n    }\n\n    this._clearActiveClass(this._config.target)\n    this._activeTarget = target\n    target.classList.add(CLASS_NAME_ACTIVE)\n    this._activateParents(target)\n\n    EventHandler.trigger(this._element, EVENT_ACTIVATE, { relatedTarget: target })\n  }\n\n  _activateParents(target) {\n    // Activate dropdown parents\n    if (target.classList.contains(CLASS_NAME_DROPDOWN_ITEM)) {\n      SelectorEngine.findOne(SELECTOR_DROPDOWN_TOGGLE, target.closest(SELECTOR_DROPDOWN))\n        .classList.add(CLASS_NAME_ACTIVE)\n      return\n    }\n\n    for (const listGroup of SelectorEngine.parents(target, SELECTOR_NAV_LIST_GROUP)) {\n      // Set triggered links parents as active\n      // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor\n      for (const item of SelectorEngine.prev(listGroup, SELECTOR_LINK_ITEMS)) {\n        item.classList.add(CLASS_NAME_ACTIVE)\n      }\n    }\n  }\n\n  _clearActiveClass(parent) {\n    parent.classList.remove(CLASS_NAME_ACTIVE)\n\n    const activeNodes = SelectorEngine.find(`${SELECTOR_TARGET_LINKS}.${CLASS_NAME_ACTIVE}`, parent)\n    for (const node of activeNodes) {\n      node.classList.remove(CLASS_NAME_ACTIVE)\n    }\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = ScrollSpy.getOrCreateInstance(this, config)\n\n      if (typeof config !== 'string') {\n        return\n      }\n\n      if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config]()\n    })\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(window, EVENT_LOAD_DATA_API, () => {\n  for (const spy of SelectorEngine.find(SELECTOR_DATA_SPY)) {\n    ScrollSpy.getOrCreateInstance(spy)\n  }\n})\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(ScrollSpy)\n\nexport default ScrollSpy\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}