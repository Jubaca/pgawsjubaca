{"ast":null,"code":"/**\n * --------------------------------------------------------------------------\n * Bootstrap popover.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport Tooltip from './tooltip.js';\nimport { defineJQueryPlugin } from './util/index.js';\n\n/**\n * Constants\n */\n\nconst NAME = 'popover';\nconst SELECTOR_TITLE = '.popover-header';\nconst SELECTOR_CONTENT = '.popover-body';\nconst Default = {\n  ...Tooltip.Default,\n  content: '',\n  offset: [0, 8],\n  placement: 'right',\n  template: '<div class=\"popover\" role=\"tooltip\">' + '<div class=\"popover-arrow\"></div>' + '<h3 class=\"popover-header\"></h3>' + '<div class=\"popover-body\"></div>' + '</div>',\n  trigger: 'click'\n};\nconst DefaultType = {\n  ...Tooltip.DefaultType,\n  content: '(null|string|element|function)'\n};\n\n/**\n * Class definition\n */\n\nclass Popover extends Tooltip {\n  // Getters\n  static get Default() {\n    return Default;\n  }\n  static get DefaultType() {\n    return DefaultType;\n  }\n  static get NAME() {\n    return NAME;\n  }\n\n  // Overrides\n  _isWithContent() {\n    return this._getTitle() || this._getContent();\n  }\n\n  // Private\n  _getContentForTemplate() {\n    return {\n      [SELECTOR_TITLE]: this._getTitle(),\n      [SELECTOR_CONTENT]: this._getContent()\n    };\n  }\n  _getContent() {\n    return this._resolvePossibleFunction(this._config.content);\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Popover.getOrCreateInstance(this, config);\n      if (typeof config !== 'string') {\n        return;\n      }\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`);\n      }\n      data[config]();\n    });\n  }\n}\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Popover);\nexport default Popover;","map":{"version":3,"names":["Tooltip","defineJQueryPlugin","NAME","SELECTOR_TITLE","SELECTOR_CONTENT","Default","content","offset","placement","template","trigger","DefaultType","Popover","_isWithContent","_getTitle","_getContent","_getContentForTemplate","_resolvePossibleFunction","_config","jQueryInterface","config","each","data","getOrCreateInstance","TypeError"],"sources":["/Volumes/DatosINT/DEV/Git/PgMiaLucas/juanbproducciones/node_modules/bootstrap/js/src/popover.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap popover.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport Tooltip from './tooltip.js'\nimport { defineJQueryPlugin } from './util/index.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'popover'\n\nconst SELECTOR_TITLE = '.popover-header'\nconst SELECTOR_CONTENT = '.popover-body'\n\nconst Default = {\n  ...Tooltip.Default,\n  content: '',\n  offset: [0, 8],\n  placement: 'right',\n  template: '<div class=\"popover\" role=\"tooltip\">' +\n    '<div class=\"popover-arrow\"></div>' +\n    '<h3 class=\"popover-header\"></h3>' +\n    '<div class=\"popover-body\"></div>' +\n    '</div>',\n  trigger: 'click'\n}\n\nconst DefaultType = {\n  ...Tooltip.DefaultType,\n  content: '(null|string|element|function)'\n}\n\n/**\n * Class definition\n */\n\nclass Popover extends Tooltip {\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Overrides\n  _isWithContent() {\n    return this._getTitle() || this._getContent()\n  }\n\n  // Private\n  _getContentForTemplate() {\n    return {\n      [SELECTOR_TITLE]: this._getTitle(),\n      [SELECTOR_CONTENT]: this._getContent()\n    }\n  }\n\n  _getContent() {\n    return this._resolvePossibleFunction(this._config.content)\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Popover.getOrCreateInstance(this, config)\n\n      if (typeof config !== 'string') {\n        return\n      }\n\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config]()\n    })\n  }\n}\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Popover)\n\nexport default Popover\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,OAAO,MAAM,cAAc;AAClC,SAASC,kBAAkB,QAAQ,iBAAiB;;AAEpD;AACA;AACA;;AAEA,MAAMC,IAAI,GAAG,SAAS;AAEtB,MAAMC,cAAc,GAAG,iBAAiB;AACxC,MAAMC,gBAAgB,GAAG,eAAe;AAExC,MAAMC,OAAO,GAAG;EACd,GAAGL,OAAO,CAACK,OAAO;EAClBC,OAAO,EAAE,EAAE;EACXC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACdC,SAAS,EAAE,OAAO;EAClBC,QAAQ,EAAE,sCAAsC,GAC9C,mCAAmC,GACnC,kCAAkC,GAClC,kCAAkC,GAClC,QAAQ;EACVC,OAAO,EAAE;AACX,CAAC;AAED,MAAMC,WAAW,GAAG;EAClB,GAAGX,OAAO,CAACW,WAAW;EACtBL,OAAO,EAAE;AACX,CAAC;;AAED;AACA;AACA;;AAEA,MAAMM,OAAO,SAASZ,OAAO,CAAC;EAC5B;EACA,WAAWK,OAAOA,CAAA,EAAG;IACnB,OAAOA,OAAO;EAChB;EAEA,WAAWM,WAAWA,CAAA,EAAG;IACvB,OAAOA,WAAW;EACpB;EAEA,WAAWT,IAAIA,CAAA,EAAG;IAChB,OAAOA,IAAI;EACb;;EAEA;EACAW,cAAcA,CAAA,EAAG;IACf,OAAO,IAAI,CAACC,SAAS,EAAE,IAAI,IAAI,CAACC,WAAW,EAAE;EAC/C;;EAEA;EACAC,sBAAsBA,CAAA,EAAG;IACvB,OAAO;MACL,CAACb,cAAc,GAAG,IAAI,CAACW,SAAS,EAAE;MAClC,CAACV,gBAAgB,GAAG,IAAI,CAACW,WAAW;IACtC,CAAC;EACH;EAEAA,WAAWA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACE,wBAAwB,CAAC,IAAI,CAACC,OAAO,CAACZ,OAAO,CAAC;EAC5D;;EAEA;EACA,OAAOa,eAAeA,CAACC,MAAM,EAAE;IAC7B,OAAO,IAAI,CAACC,IAAI,CAAC,YAAY;MAC3B,MAAMC,IAAI,GAAGV,OAAO,CAACW,mBAAmB,CAAC,IAAI,EAAEH,MAAM,CAAC;MAEtD,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;QAC9B;MACF;MAEA,IAAI,OAAOE,IAAI,CAACF,MAAM,CAAC,KAAK,WAAW,EAAE;QACvC,MAAM,IAAII,SAAS,CAAE,oBAAmBJ,MAAO,GAAE,CAAC;MACpD;MAEAE,IAAI,CAACF,MAAM,CAAC,EAAE;IAChB,CAAC,CAAC;EACJ;AACF;;AAEA;AACA;AACA;;AAEAnB,kBAAkB,CAACW,OAAO,CAAC;AAE3B,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}