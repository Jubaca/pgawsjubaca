{"ast":null,"code":"/**\n * --------------------------------------------------------------------------\n * Bootstrap util/swipe.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport EventHandler from '../dom/event-handler.js';\nimport Config from './config.js';\nimport { execute } from './index.js';\n\n/**\n * Constants\n */\n\nconst NAME = 'swipe';\nconst EVENT_KEY = '.bs.swipe';\nconst EVENT_TOUCHSTART = `touchstart${EVENT_KEY}`;\nconst EVENT_TOUCHMOVE = `touchmove${EVENT_KEY}`;\nconst EVENT_TOUCHEND = `touchend${EVENT_KEY}`;\nconst EVENT_POINTERDOWN = `pointerdown${EVENT_KEY}`;\nconst EVENT_POINTERUP = `pointerup${EVENT_KEY}`;\nconst POINTER_TYPE_TOUCH = 'touch';\nconst POINTER_TYPE_PEN = 'pen';\nconst CLASS_NAME_POINTER_EVENT = 'pointer-event';\nconst SWIPE_THRESHOLD = 40;\nconst Default = {\n  endCallback: null,\n  leftCallback: null,\n  rightCallback: null\n};\nconst DefaultType = {\n  endCallback: '(function|null)',\n  leftCallback: '(function|null)',\n  rightCallback: '(function|null)'\n};\n\n/**\n * Class definition\n */\n\nclass Swipe extends Config {\n  constructor(element, config) {\n    super();\n    this._element = element;\n    if (!element || !Swipe.isSupported()) {\n      return;\n    }\n    this._config = this._getConfig(config);\n    this._deltaX = 0;\n    this._supportPointerEvents = Boolean(window.PointerEvent);\n    this._initEvents();\n  }\n\n  // Getters\n  static get Default() {\n    return Default;\n  }\n  static get DefaultType() {\n    return DefaultType;\n  }\n  static get NAME() {\n    return NAME;\n  }\n\n  // Public\n  dispose() {\n    EventHandler.off(this._element, EVENT_KEY);\n  }\n\n  // Private\n  _start(event) {\n    if (!this._supportPointerEvents) {\n      this._deltaX = event.touches[0].clientX;\n      return;\n    }\n    if (this._eventIsPointerPenTouch(event)) {\n      this._deltaX = event.clientX;\n    }\n  }\n  _end(event) {\n    if (this._eventIsPointerPenTouch(event)) {\n      this._deltaX = event.clientX - this._deltaX;\n    }\n    this._handleSwipe();\n    execute(this._config.endCallback);\n  }\n  _move(event) {\n    this._deltaX = event.touches && event.touches.length > 1 ? 0 : event.touches[0].clientX - this._deltaX;\n  }\n  _handleSwipe() {\n    const absDeltaX = Math.abs(this._deltaX);\n    if (absDeltaX <= SWIPE_THRESHOLD) {\n      return;\n    }\n    const direction = absDeltaX / this._deltaX;\n    this._deltaX = 0;\n    if (!direction) {\n      return;\n    }\n    execute(direction > 0 ? this._config.rightCallback : this._config.leftCallback);\n  }\n  _initEvents() {\n    if (this._supportPointerEvents) {\n      EventHandler.on(this._element, EVENT_POINTERDOWN, event => this._start(event));\n      EventHandler.on(this._element, EVENT_POINTERUP, event => this._end(event));\n      this._element.classList.add(CLASS_NAME_POINTER_EVENT);\n    } else {\n      EventHandler.on(this._element, EVENT_TOUCHSTART, event => this._start(event));\n      EventHandler.on(this._element, EVENT_TOUCHMOVE, event => this._move(event));\n      EventHandler.on(this._element, EVENT_TOUCHEND, event => this._end(event));\n    }\n  }\n  _eventIsPointerPenTouch(event) {\n    return this._supportPointerEvents && (event.pointerType === POINTER_TYPE_PEN || event.pointerType === POINTER_TYPE_TOUCH);\n  }\n\n  // Static\n  static isSupported() {\n    return 'ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0;\n  }\n}\nexport default Swipe;","map":{"version":3,"names":["EventHandler","Config","execute","NAME","EVENT_KEY","EVENT_TOUCHSTART","EVENT_TOUCHMOVE","EVENT_TOUCHEND","EVENT_POINTERDOWN","EVENT_POINTERUP","POINTER_TYPE_TOUCH","POINTER_TYPE_PEN","CLASS_NAME_POINTER_EVENT","SWIPE_THRESHOLD","Default","endCallback","leftCallback","rightCallback","DefaultType","Swipe","constructor","element","config","_element","isSupported","_config","_getConfig","_deltaX","_supportPointerEvents","Boolean","window","PointerEvent","_initEvents","dispose","off","_start","event","touches","clientX","_eventIsPointerPenTouch","_end","_handleSwipe","_move","length","absDeltaX","Math","abs","direction","on","classList","add","pointerType","document","documentElement","navigator","maxTouchPoints"],"sources":["/Volumes/DatosINT/DEV/Git/PgMiaLucas/juanbproducciones/node_modules/bootstrap/js/src/util/swipe.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap util/swipe.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport EventHandler from '../dom/event-handler.js'\nimport Config from './config.js'\nimport { execute } from './index.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'swipe'\nconst EVENT_KEY = '.bs.swipe'\nconst EVENT_TOUCHSTART = `touchstart${EVENT_KEY}`\nconst EVENT_TOUCHMOVE = `touchmove${EVENT_KEY}`\nconst EVENT_TOUCHEND = `touchend${EVENT_KEY}`\nconst EVENT_POINTERDOWN = `pointerdown${EVENT_KEY}`\nconst EVENT_POINTERUP = `pointerup${EVENT_KEY}`\nconst POINTER_TYPE_TOUCH = 'touch'\nconst POINTER_TYPE_PEN = 'pen'\nconst CLASS_NAME_POINTER_EVENT = 'pointer-event'\nconst SWIPE_THRESHOLD = 40\n\nconst Default = {\n  endCallback: null,\n  leftCallback: null,\n  rightCallback: null\n}\n\nconst DefaultType = {\n  endCallback: '(function|null)',\n  leftCallback: '(function|null)',\n  rightCallback: '(function|null)'\n}\n\n/**\n * Class definition\n */\n\nclass Swipe extends Config {\n  constructor(element, config) {\n    super()\n    this._element = element\n\n    if (!element || !Swipe.isSupported()) {\n      return\n    }\n\n    this._config = this._getConfig(config)\n    this._deltaX = 0\n    this._supportPointerEvents = Boolean(window.PointerEvent)\n    this._initEvents()\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  dispose() {\n    EventHandler.off(this._element, EVENT_KEY)\n  }\n\n  // Private\n  _start(event) {\n    if (!this._supportPointerEvents) {\n      this._deltaX = event.touches[0].clientX\n\n      return\n    }\n\n    if (this._eventIsPointerPenTouch(event)) {\n      this._deltaX = event.clientX\n    }\n  }\n\n  _end(event) {\n    if (this._eventIsPointerPenTouch(event)) {\n      this._deltaX = event.clientX - this._deltaX\n    }\n\n    this._handleSwipe()\n    execute(this._config.endCallback)\n  }\n\n  _move(event) {\n    this._deltaX = event.touches && event.touches.length > 1 ?\n      0 :\n      event.touches[0].clientX - this._deltaX\n  }\n\n  _handleSwipe() {\n    const absDeltaX = Math.abs(this._deltaX)\n\n    if (absDeltaX <= SWIPE_THRESHOLD) {\n      return\n    }\n\n    const direction = absDeltaX / this._deltaX\n\n    this._deltaX = 0\n\n    if (!direction) {\n      return\n    }\n\n    execute(direction > 0 ? this._config.rightCallback : this._config.leftCallback)\n  }\n\n  _initEvents() {\n    if (this._supportPointerEvents) {\n      EventHandler.on(this._element, EVENT_POINTERDOWN, event => this._start(event))\n      EventHandler.on(this._element, EVENT_POINTERUP, event => this._end(event))\n\n      this._element.classList.add(CLASS_NAME_POINTER_EVENT)\n    } else {\n      EventHandler.on(this._element, EVENT_TOUCHSTART, event => this._start(event))\n      EventHandler.on(this._element, EVENT_TOUCHMOVE, event => this._move(event))\n      EventHandler.on(this._element, EVENT_TOUCHEND, event => this._end(event))\n    }\n  }\n\n  _eventIsPointerPenTouch(event) {\n    return this._supportPointerEvents && (event.pointerType === POINTER_TYPE_PEN || event.pointerType === POINTER_TYPE_TOUCH)\n  }\n\n  // Static\n  static isSupported() {\n    return 'ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0\n  }\n}\n\nexport default Swipe\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}